/// Generates a media query string matching the input value. Refer to the documentation for the `breakpoint()` mixin to see what the possible inputs are.
///
/// @param {Keyword|Number} $val [small] - Breakpoint name, or px, rem, or em value to process.
@function breakpoint($val: zero) {
    // Size or keyword
    $bp-name: nth($val, 1);
    // Value for max-width media queries
    $bp-max: 0;
    // Direction of media query (up, down, or only)
    $dir: if(length($val) > 1, nth($val, 2), up);
    // Eventual output
    $str: "";
    // Is it a named media query?
    $named: false;
    // Breakpoint size
    $bp: null;

    // Orientation media queries have a unique syntax
    @if $bp-name == "landscape" or $bp-name == "portrait" {
        @return "(orientation: #{$bp-name})";
    } @else if $bp-name == "retina" {
        @return "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)";
    }

    // Validate dir statement.
    @if $dir != only and $dir != up and $dir != down {
        @warn 'Invalid direction statement #{$dir} in breakpoint definition #{$val}, use one of: up, down, only';
    }

    // Try to pull a named breakpoint out of the $breakpoints map
    @if type-of($bp-name) == "string" {
        @if map-has-key($breakpoints, $bp-name) {
            @if $dir == "only" or $dir == "down" {
                $bp-max: map-next-value($breakpoints, $bp-name);
            }

            $bp: map-get($breakpoints, $bp-name);
            $named: true;
        } @else {
            $bp: 0;
            @warn 'breakpoint(): "#{$val}" is not defined in your $breakpoints setting.';
        }
    }
    @else {
        // If $bp-name is actually pixel value.
        $bp: $bp-name;
    }

    @if $bp-max {
        $bp-max: $bp-max - 0.0001;
    }

    // Conditions to skip media query creation
    // - It's a named breakpoint that resolved to "0 down" or "0 up"
    // - It's a numeric breakpoint that resolved to "0 " + anything
    @if $bp > 0px or $dir == "only" or $dir == "down" {
        // `only` ranges use the format `(min-width: n) and (max-width: n)`
        @if $dir == "only" {
            // Only named media queries can have an "only" range
            @if $named == true {
                // Only use "min-width" if the floor is greater than 0
                @if $bp > 0px {
                    $str: $str + "(min-width: #{$bp})";

                    // Only add "and" to the media query if there's a ceiling
                    @if $bp-max != null {
                        $str: $str + " and ";
                    }
                }

                // Only use "max-width" if there's a ceiling
                @if $bp-max != null {
                    $str: $str + "(max-width: #{$bp-max})";
                }
            } @else {
                @warn 'breakpoint(): Only named media queries can have an `only` range.';
            }
        }

        // `down` ranges use the format `(max-width: n)`
        @else if $dir == "down" {
            $max: if($named, $bp-max, $bp);

            // Skip media query creation if input value is exactly "0 down",
            // unless the function was called as "small down", in which case it's just "small only"
            @if $named or $bp > 0px {
                @if $max != null {
                    $str: $str + "(max-width: #{$max})";
                }
            }
        }

        // `up` ranges use the format `(min-width: n)`
        @else if $bp > 0px {
            $str: $str + "(min-width: #{$bp})";
        }
    }

    @return $str;
}


/// Wraps a media query around the content you put inside the mixin. This mixin accepts a number of values:
///  - If a string is passed, the mixin will look for it in the `$breakpoints` map, and use a media query there.
///  - If a rem, px or em value is passed, the value will be used as-is.
///
/// @param {Keyword|Number} $value - Breakpoint name, or px, rem, or em value to process.
///
/// @output If the breakpoint is "0px and larger", outputs the content as-is. Otherwise, outputs the content wrapped in a media query.
@mixin breakpoint($value) {
    $str: breakpoint($value);

    // If $str is still an empty string, no media query is needed
    @if $str == "" {
        @content;
    }

    // Otherwise, wrap the content in a media query
    @else {
        @media screen and #{$str} {
            @content;
        }
    }
}
